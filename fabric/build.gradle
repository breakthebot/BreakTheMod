plugins {
    id 'com.github.johnrengelman.shadow'
}
import net.fabricmc.loom.task.RemapJarTask

repositories {
    maven { url 'https://maven.fabricmc.net/' }
    maven { url 'https://maven.shedaniel.me/' }
    maven { url 'https://maven.terraformersmc.com/releases/' }
    maven {
        url "https://maven.nucleoid.xyz/"
        name "Nucleoid"
    }
    maven {
        url "https://maven.pkg.github.com/chariskar/breaktheapi"
        credentials {
            username = System.getenv("GH_USERNAME")
            password = System.getenv("GH_TOKEN")
        }
    }
}
architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common

    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    modImplementation "net.fabricmc.fabric-api:fabric-api:$rootProject.fabric_api_version"

    modImplementation "dev.architectury:architectury-fabric:$rootProject.architectury_api_version"
    mappings "net.fabricmc:yarn:${rootProject.minecraft_version}+build.8"


    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionFabric')
    modImplementation "eu.pb4:placeholder-api:2.5.2+1.21.3"
    modApi("me.shedaniel.cloth:cloth-config-fabric:17.0.144") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    shadowBundle("net.chariskar:breaktheapi:1.0.0")
    modImplementation("net.chariskar:breaktheapi:1.0.0")
    modApi "com.terraformersmc:modmenu:13.0.2"
}

processResources {
    inputs.property 'version', project.version

    filesMatching('fabric.mod.json') {
        expand version: project.version
    }
}
// idk it works dont touch it.
tasks.named("shadowJar", com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    archiveClassifier.set("dev-shadow")
    configurations = [project.configurations.shadowBundle]
    relocate "net.chariskar.breaktheapi", "net.chariskar.breakthemod.breaktheapi"

    eachFile {
        if (path.startsWith("ui/") || path.startsWith("net/fabricmc/")) {
            exclude()
        }
        if (path.split("-")[0] == "fabric" | path.split("-")[0] == "architectury") {
            exclude()
        }
    }


    includeEmptyDirs = false
}


tasks.register("remapShadowJar", RemapJarTask) {
    dependsOn tasks.shadowJar
    group = "build"
    description = "Remaps the shaded jar"

    input.set(tasks.shadowJar.archiveFile)
    archiveClassifier.set("")
    addNestedDependencies.set(false)

}

tasks.named("build") {
    dependsOn tasks.named("remapShadowJar")
}